% STIPPLE  Fill regions of a map with a pattern. When using hatching, it is 
%          generated by many small line segments, so graphics output files
%          can be very large. For a better approximation to contourf, may
%          need to interpolate data to a finer grid before using stipple.
% INPUTS:
%   x,y    regular grid locations
%   vv     field of values corresponding to x,y
%   mn,mx  Value range to be filled. If [], range is one-sided.
%   dens   Pattern repeat density, in terms of grid points. 
%   sym    The standard plot symbol to use
%   msz    markersize  (defaults: symbol= 6, linewidth=.5)
%   ltype  [] or 0 if using plotted discrete symbols rather than lines
%          forming hatching; 1 vertical; 2 horizontal; 3 NW-SE; 4 SW-NE
%   po     plot option, eg 'color'
%   pov    corresponding plot option value, eq [.7 .7 .7]
%
% Jeff Dunn CSIRO Marine Research March 2001
%
% $Id: stipple.m,v 1.1 2001/08/08 01:34:30 dun216 Exp dun216 $
%
% Example:  The following calls wil cross-hatch the 34.1-34.2 band of data.
%           stipple(X,Y,salt,34.1,34.2,3,'k-',1,3);
%           stipple(X,Y,salt,34.1,34.2,3,'k-',1,4);
% USAGE:  stipple(x,y,vv,mn,mx,dens,sym,msz,ltype,po,pov)

function stipple(x,y,vv,mn,mx,dens,sym,msz,ltype,po,pov)

% MODS: 8/8/01 Add check on number of symbols to be plotted, to prevent
%       accidentally swamping memory.  JRD

hold on;

if nargin<10
   po = [];
   pov = [];
end
if nargin<9 | isempty(ltype)
   ltype = 0;
end
if nargin<8 | isempty(msz)
   msz = 1;
end
if nargin<7 | isempty(sym)
   sym = '+';
end
if nargin<6 | isempty(dens)
   dens = 1;
end
if nargin<5 | isempty(mx)
   mx = max(vv(:))+1;
end
if nargin<4 | isempty(mn)
   mn = min(vv(:))-1;
end

nd = dens-1;

ii = find(vv>=mn & vv<=mx);
if ~isempty(ii)
   
   % First check that we are not about to kill the Matlab session due to
   % excessive memory requirements   
   if (length(ii)*(nd^2)) > 500000
      if (length(ii)*(nd^2)) > 10000000
	 disp([7 'You are asking for an OUTRAGEOUS number of symbols to be plotted'])
	 disp('Please alter arguments (most likely reduce "dens").')
	 return
      else
	 if dens > 5
	    disp([7 'The "dens" you have specified will cause large memory usage'])
	    disp('and a large graphics file.')
	 else
	    disp([7 'This call will cause large memory usage and a large graphics'])
	    disp('file. Check your input arguments.')
	 end
	 ss = input('Do you want to continue with this action? : ','s');
	 if isempty(ss) | ss(1)=='n' | ss(1)=='N'
	    return
	 end
      end
   end
   
   if ltype
      nn =  repmat(nan,size(ii));
      if ltype==1
	 yd = y(2,1)-y(1,1);
	 yy = [y(ii)-yd/2 y(ii)+yd/2 nn]';
	 jplot([x(ii) x(ii) nn]',yy,sym,'linewidth',msz,po,pov);
	 xd = (x(1,2)-x(1,1))/(1+(2*nd));
	 for jj = 1:nd
	    jplot([x(ii)-(xd*jj) x(ii)-(xd*jj) nn]',yy,sym,'linewidth',msz,po,pov);
	    jplot([x(ii)+(xd*jj) x(ii)+(xd*jj) nn]',yy,sym,'linewidth',msz,po,pov);
	 end
      elseif ltype==2
	 xd = x(1,2)-x(1,1);
	 xx = [x(ii)-xd/2 x(ii)+xd/2 nn]';
	 jplot(xx,[y(ii) y(ii) nn]',sym,'linewidth',msz,po,pov);
	 yd = (y(2,1)-y(1,1))/(1+(2*nd));
	 for jj = 1:nd
	    jplot(xx,[y(ii)-(yd*jj) y(ii)-(yd*jj) nn]',sym,'linewidth',msz,po,pov);
	    jplot(xx,[y(ii)+(yd*jj) y(ii)+(yd*jj) nn]',sym,'linewidth',msz,po,pov);
	 end
      elseif ltype==3 | ltype==4
	 xd = x(1,2)-x(1,1); 
	 yd = y(2,1)-y(1,1);
	 x0 = x(ii)-xd/2;
	 x1 = x(ii)+xd/2;
	 xx = [x0 x1 nn]';
	 y0 = y(ii)-yd/2;
	 y1 = y(ii)+yd/2;
	 yd = (y(2,1)-y(1,1))/(1+nd);
	 xd = (x(1,2)-x(1,1))/(1+nd);
	 if ltype==3
	    yy = [y1 y0 nn]';
	    jplot(xx,yy,sym,'linewidth',msz,po,pov);
	    for jj = 1:nd
	       jplot([x0 x0+(xd*jj) nn]',[y0+(yd*jj) y0 nn]',sym,'linewidth',msz,po,pov);
	       jplot([x0+(xd*jj) x1 nn]',[y1 y0+(yd*jj) nn]',sym,'linewidth',msz,po,pov);
	    end
	 else
	    yy = [y0 y1 nn]';
	    jplot(xx,yy,sym,'linewidth',msz,po,pov);
	    for jj = 1:nd
	       jplot([x0 x0+(xd*jj) nn]',[y1-(yd*jj) y1 nn]',sym,'linewidth',msz,po,pov);
	       jplot([x0+(xd*jj) x1 nn]',[y0 y1-(yd*jj) nn]',sym,'linewidth',msz,po,pov);
	    end
	 end
      end
   else
      xi = (x(1,2)-x(1,1))/(1+(2*nd));
      yi = (y(2,1)-y(1,1))/(1+(2*nd));
      [xx,yy] = meshgrid(-(nd*xi):xi:(nd*xi),-(nd*yi):yi:(nd*yi));
      for jj = 1:prod(size(xx))
	 jplot(x(ii)+xx(jj),y(ii)+yy(jj),sym,'markersize',msz,po,pov);
      end
   end
end

%---------------------------------------------------------------------------
function jplot(x,y,sym,a1,b1,a2,b2)

if isempty(a2)
   plot(x,y,sym,a1,b1);
else
   plot(x,y,sym,a1,b1,a2,b2);
end

%---------------------------------------------------------------------------
